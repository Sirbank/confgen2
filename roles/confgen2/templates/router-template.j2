system {
    host-name {{ item.hostname }};
    root-authentication {
        encrypted-password "$5$4HuaVmYQ$Hwy0R.4ptnkY9bV4Aw9Ropkl0TtsREOebtHyJMpbjOA"; ## SECRET-DATA
    }
    login {
        user lab {
            uid 2000;
            class super-user;
            authentication {
                encrypted-password "$5$wWczSkx8$zFNYq9FVv7g0fH5oO4laYVRavxEtGPaYfnvfURuZ0a/"; ## SECRET-DATA
            }
        }
    }
    services {
        ssh {
            max-sessions-per-connection 32;
        }
        netconf {
            ssh;
        }
    }
    syslog {
        user * {
            any emergency;
        }
        file messages {
            any any;
            authorization info;
        }
        file interactive-commands {
            interactive-commands any;
        }
        file default-log-messages {
            any info;
            match "(requested 'commit' operation)|(copying configuration to juniper.save)|(commit complete)|ifAdminStatus|(FRU power)|(FRU removal)|(FRU insertion)|(link UP)|transitioned|Transferred|transfer-file|(license add)|(license delete)|(package -X update)|(package -X delete)|(FRU Online)|(FRU Offline)|(plugged in)|(unplugged)|GRES";
            structured-data;
        }
    }
    license {
        autoupdate {
            url https://ae1.juniper.net/junos/key_retrieval;
        }
    }
}

interfaces {
    ge-0/0/0 {
        description {{ item.ge000_descr }};
        unit 0 {
            family inet {
                address {{ item.ge000_addr }}/{{ item.ge000_mask }};
                }
            }
        }
    ge-0/0/1 {
        description {{ item.ge001_descr }};
        unit 0 {
            family inet {
                address {{ item.ge001_addr }}/{{ item.ge001_mask }};
                }
            }
        }
    lo0 {
        unit 0 {
            family inet {
                address {{ item.loopback }}/32;
                }
            }
        }
}

routing-options {
    autonomous-system {{ item.bgp_asn }};
}

protocols {
    bgp {
         group BGP {
              neighbor {{ item.bgp_neigh }};
              peer-as {{ item.bgp_remote_asn }};
         }
   }
}
}
